



# <문제> 곱하기 혹은 더하기


# 1. 문제 설명
# 각 자리가 숫자(0부터 9)로만 이루어진 문자열 S가 주어졌을 때, 
# 왼쪽부터 오른쪽으로 하나씩 모든 숫자를 확인하며 숫자 사이에 'x' 혹은 '+'연산자를 넣어 
# 결과적으로 만들어질 수 있는 가장 큰 수를 구하는 프로그램을 작성해라.
# 단, + 보단 x를 먼저 계산하는 일반적인 방식과는 달리, 모든 연산은 왼쪽에서부터 순서대로 이루어진다고 가정.
# (ex) 02983라는 문자열로 만들 수 있는 가장 큰 수 =>  ((((0 + 2) x 9) x 8) X 3) = 576

# 만들어질 수 있는 가장 큰 수는 항상 20억 이하의 정수가 되도록 입력이 주어짐
# 일반적인 프로그래밍 언어에서 정수 데이터를 위해 int 형을 사용하는 경우 약 21억 정도까지 값이 형성될 수 있기 때문에
# 그런 점을 감안하고 문제에서 최대값을 명시해 주는 것
# 파이썬에서는 기본적으로 정수 데이터를 처리함에 있어서 수의 범위 제한이 없기 때문에
# 이러한 조건이 없어도 큰 문제 없음 -> 다른 프로그래밍언어를 사용하는 사람까지 배려한 문제




# 2. 문제 조건
# 난이도 1, 풀이시간 30분, 시간제한 1초, 메모리 제한 128MB
# 입력 조건: 첫째 줄에 여러 개의 숫자로 구성된 하나의 문자열 S가 주어짐(1 <= S의 길이 <= 20)
# 출력 조건: 첫째 줄에 만들어질 수 있는 가장 큰 수 출력




# 내가 짜본 코드  


s = input()
result = 0

for i in range(len(s)):
    if i == 0:
        result = int(s[i])
        continue
    if result == 0:
       result += int(s[i])
    else:
       result *= int(s[i]) 

print(result)         


    
  
# 3. 문제 해결 아이디어





# 4. 정당성 분석 






# 5. 답안 예시  







