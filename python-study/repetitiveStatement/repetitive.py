



# 반복문
# 특정한 소스코드를 반복적으로 실행하고자 할 때 사용하는 문법
# 파이썬에서는 while문, for문이 있는데, 어떤 것을 사용해도 상관 없음
# 단, 코딩테스트에서의 실제 사용 예시를 확인해 보면, 
# while문 보다 for문이 더 간결한 경우가 많음





# while문
# 반복을 위한 별도의 i라는 변수를 이용하는 것이 일반적 

# while i를 이용한 조건식 :
#     조건식이 참일 경우 실행할 소스코드   
#     i값이 증감 또는 감소하는 코드  



# 1부터 9까지 모든 정수의 합 구하기 예제 (while문)

i = 1
result = 0

# i가 9보다 작거나 같을 때 아래 코드를 반복적으로 실행
while i <= 9:
    result += i
    i += 1

print(result)     # 45






# 반복문에서의 무한 루프
# 무한 루프란 끊임없이 반복되는 반복 구문을 의미
# 코딩 테스트에서 무한 루프를 구현할 일은 거의 없으니 유의할 것
# 반복문을 작성한 뒤에는 항상 반복문을 탈출할 수 있는지 확인해야 함

x = 10

while x > 5:
    print(x)   # 10 10 10 10 10 ........ Infinite Loop






# for문
# for문의 구조는 특정한 변수를 이용하여 'in' 뒤에 오는 데이터(리스트, 튜플 등)에 포함되어 있는 원소를
# 첫 번째 인덱스부터 차례대로 하나씩 방문 
# 변수는 주로 i 또는 x 와 같은 짦은 변수 사용 

# for 변수 in 리스트:
#     실행할 소스코드  


array = [1, 2, 3, 4, 5]

for x in array:
    print(x)    # 1, 2, 3, 4, 5




# for문에서 연속적인 값을 차례대로 순회할 때는 range()를 주로 사용함
# 이때 range(시작 값, 끝 값 + 1) 형태로 사용.
# 인자를 하나만 넣으면 자동으로 시작 값은 0이 됨.


result = 0

# i는 1부터 9까지의 모든 값을 순회
for i in range(1, 10):  # 1 ~ 9
    result += i

print(result)   # 45


for i in range(10):  # 0 ~ 9
    print(i * i)     # 0 1 4 9 16 25 36 49 64 81






# 파이썬의 continue 키워드
# 반복문에서 남은 코드의 실행을 건너뛰고, 다음 반복을 진행하고자 할 때 continue 사용

# 1부터 9까지의 홀수 의 합을 구하기

result = 0

for i in range(1,10):
    if i % 2 == 0:   # i가 짝수일 경우
        continue     # 아래 작성된 코드는 건너뛰고 다음 반복을 이어서 실행.
    result += i

print(result)   # 25






# 파이썬의 break 키워드
# 반복문을 즉시 탈출하고자 할 때 break 사용

# 1부터 5까지의 정수를 차례대로 출력하기

i = 0

while True:   # while문 무조건 진행
    print("현재의 값:", i)
    if i == 5:  # i가 5일 경우
        break   # 즉시 while문 탈출 
    i += 1    

# 현재의 값: 0
# 현재의 값: 1
# 현재의 값: 2
# 현재의 값: 3
# 현재의 값: 4
# 현재의 값: 5 







# 학생들의 합격 여부 판단 예제
# 1) 점수가 80점만 넘으면 합격

scores = [90, 85, 77, 65, 97]

for i in range(5):  # 0 ~ 4
    if scores[i] >= 80:
        print(i + 1, "번 학생은 합격입니다.") 

# 1 번 학생은 합격입니다.
# 2 번 학생은 합격입니다.
# 5 번 학생은 합격입니다.



# 2) 점수가 80점만 넘으면 합격, 특정 번호의 학생은 제외하기

scores = [90, 85, 77, 65, 97]
cheating_student_list = [2, 4]  # 2번 학생, 4번 학생 

for i in range(5):  # 0 ~ 4
    if i + 1 in cheating_student_list:  # 부정행위 학생 목록에 있는 학생 번호일 경우
        continue                        # 합격 판단 유무 건너뛰고, 다음 학생으로 넘어감    
    if scores[i] >= 80:
        print(i + 1, "번 학생은 합격입니다.") 
        
# 1 번 학생은 합격입니다.
# 5 번 학생은 합격입니다.






# 중첩된 반복문: 구구단 예제

for i in range(2, 10):      # 2 ~ 9    ==> 8
    for j in range(1, 10):   # 1 ~ 9   ==> 9  
        print(i, "*", j, "=", i * j)  # 총 72번 출력 
    print()    
 

# 2 * 1 = 2
# 2 * 2 = 4
# 2 * 3 = 6
# 2 * 4 = 8
# 2 * 5 = 10
# 2 * 6 = 12
# 2 * 7 = 14
# 2 * 8 = 16
# 2 * 9 = 18

# 3 * 1 = 3
# 3 * 2 = 6
# 3 * 3 = 9
# 3 * 4 = 12
# 3 * 5 = 15
# 3 * 6 = 18
# 3 * 7 = 21
# 3 * 8 = 24
# 3 * 9 = 27

# ..... 
# 9 * 9 = 81








