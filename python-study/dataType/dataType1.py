# 1.자료형


# 양의 정수
a = 1000
print(a)

# 음의 정수
a = -1000
print(a)

# 0
a = 0
print(a)

# test
a = a + 5
print(a)

a = a * 5
print(a)



# 실수
# 파이썬에서는 변수에 소수점을 붙인 수를 대입하면 실수형 변수로 처리됨.
# 소수부가 0이거나, 정수부가 0인 소수는 0을 생략하고 작성할 수 있음.

# 양의 실수
a = 157.94
print(a)

# 음의 실수
a = -34.2
print(a)

# 소수부가 0일 때 0생략
a = -8.
print(a)

# 정수부가 0일 때 0생략
a = .3
print(a)


# 지수 표현 방식
# 파이썬에서는 e나 E를 이용한 지수 표현 방식을 이용할 수 있음
# e나 E 다음에 오는 수는 10의 지수부를 의미
# ex) 2e9 = 2 * 10의 9제곱
# 임의의 큰 수를 표현하기 위해 자주 사용
# ex)10억 이상의 큰 수가 필요함 -> 1e9 이용
# 지수 표현 방식은 기본적으로 실수 데이터

# 10억
a = 1e9
print(a)

# 752.3
a = 75.23e1
print(a)

#3.954
a = 395.4e-2
print(a)


#test 
#4645600
a = 46456e2
print(a)

#0.003593
a = 3593e-6
print(a)


# 지부표현 방식 정수로 변환하여 출력하기
# 1000000000.0 -> 10000000000
a = int(1e9)
print(a)




# 컴퓨터 시스템은 실수 정보를 표현하는 정확도에 한계를 가짐.
# 2진수에서는 0.9를 정확히 표현할 수 있는 방법이 없기 때문에 아래와 같이 컴퓨터는 최대한 0.9에 가깝게 표현하지만, 미세한 오차가 발생하게 됨.

a = 0.3 + 0.6
print(a)

if a == 0.9:
   print(True)
else:
   print(False)   

# 이럴 때는 round()함수를 사용
# round(34.326, 2) -> 소수 셋째 자리에서 반올림 -> 34.33

a = round(a,1)
print(a)




# 수 자료형의 연산


# 나누기 연산자(/)
# 나누기 연산자는 주의해서 사용해야 함
# 파이썬에서 나누기 연산자는 나눠진 결과를 실수형으로 반환
#2.5
print(5/2)  


# 나머지 연산자(%)
# 짝수, 홀수 체크 시 많이 사용
# 1
print(5%2)

# 몫 연산자(//)
# 몫을 얻기위해 사용 
# 2
print(5//2)

# 거듭 제곱 연산자(**)
#25
print(5 ** 2)
# 5의 제곱근 (제곱해서 5가 되는 모든 수)
#2.23606797749979
print(5 ** 0.5)

